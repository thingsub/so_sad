<!-- <!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>홈</title>
  </head>
  <body>
    <h2>환영합니다, <span id="userId"></span>님!</h2>
    <button onclick="handleLogout()">로그아웃</button>
    <script>
      window.onload = async function () {
        const accessToken = localStorage.getItem("token");

        if (!accessToken) {
          alert("토큰이 없습니다. 로그인 페이지로 이동합니다.");
          window.location.href = "/login";
          return;
        }

        try {
          const response = await fetch("/check-home", {
            method: "GET",
            headers: {
              Authorization: `Bearer ${accessToken}`,
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            const data = await response.json();
            document.getElementById("userId").textContent = data.userId;
          } else if (response.status === 401) {
            alert("인증되지 않았습니다. 로그인 페이지로 이동합니다.");
            localStorage.removeItem("token"); // 토큰 삭제
            window.location.href = "/login"; // 로그인 페이지로 이동
          }
        } catch (error) {
          console.error("서버와의 연결 오류:", error);
          alert("서버와의 연결이 원활하지 않습니다.");
        }
      };
    </script>
  </body>
</html> -->

<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>홈</title>
    <link rel="stylesheet" href="/styles.css" />
  </head>
  <body>
    <h2 id="welcomeMessage" style="display: none">
      환영합니다, <span id="userId"></span>님!^^
    </h2>
    <h2 id="notWelcomeMessage">환영하지 않아요.</h2>
    <button id="logoutButton" onclick="handleLogout()" style="display: none">
      로그아웃
    </button>
    <!-- 로그아웃 버튼 id 추가 -->

    <script>
      window.onload = async function () {
        const accessToken = localStorage.getItem("token");

        if (!accessToken) {
          alert("토큰이 없습니다. 로그인 페이지로 이동합니다.");
          window.location.href = "/login";
          return;
        }

        try {
          const response = await fetch("/check-home", {
            method: "GET",
            headers: {
              Authorization: `Bearer ${accessToken}`,
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            const data = await response.json();
            document.getElementById("welcomeMessage").style.display = "block"; // 환영 메시지 표시
            document.getElementById("notWelcomeMessage").style.display = "none"; // 기본 메시지 숨김
            document.getElementById("userId").textContent = data.userId; // 사용자 ID 표시
            document.getElementById("logoutButton").style.display =
              "inline-block"; // 로그아웃 버튼 표시
          } else if (response.status === 401) {
            alert("인증되지 않았습니다. 로그인 페이지로 이동합니다.");
            localStorage.removeItem("token"); // 토큰 삭제
            window.location.href = "/login"; // 로그인 페이지로 이동
          }
        } catch (error) {
          console.error("서버와의 연결 오류:", error);
          alert("서버와의 연결이 원활하지 않습니다.");
        }
      };

      function handleLogout() {
        localStorage.removeItem("token"); // 토큰 삭제
        alert("로그아웃되었습니다."); // 로그아웃 메시지
        window.location.href = "/login"; // 로그인 페이지로 리다이렉트
      }
    </script>
  </body>
</html>
